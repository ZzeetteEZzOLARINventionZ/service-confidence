package sei.pku.wsdl_analyzer;

/**
 * 记录Web Service的一个Endpoint的基本信息的数据结构
 * 
 * @author lijiejacy
 * 
 */184 × 60MORE SIZES
RESULTS FOR PACKAGE COM.THOUGHTWORKS.ROVER; IMPORT COM.THOUGHTWORKS.ROVER.COMMANDS.ICOMMAND; IMPORT COM.THOUGHTWORKS.ROVER.PARSER.STRINGCOMMANDPARSER; IMPORT COM.THOUGHTWORKS.ROVER.UNIVERSE.COORDINATES; IMPORT COM.THOUGHTWORKS.ROVER.UNIVERSE.DIRECTION; IMPORT COM.THOUGHTWORKS.ROVER.UNIVERSE.PLATEAU; IMPORT JAVA.UTIL.LIST; PUBLIC CLASS MARSROVER { PRIVATE COORDINATES CURRENTCOORDINATES; PRIVATE DIRECTION CURRENTDIRECTION; PRIVATE PLATEAU PLATEAU; PUBLIC MARSROVER(FINAL PLATEAU PLATEAU, FINAL DIRECTION DIRECTION, FINAL COORDINATES COORDINATES) { THIS.PLATEAU = PLATEAU; THIS.CURRENTDIRECTION = DIRECTION; THIS.CURRENTCOORDINATES = COORDINATES; } PUBLIC VOID RUN(FINAL STRING COMMANDSTRING) { LIST<ICOMMAND> ROVERCOMMANDS = NEW STRINGCOMMANDPARSER(COMMANDSTRING).TOCOMMANDS(); FOR (ICOMMAND COMMAND : ROVERCOMMANDS) { COMMAND.EXECUTE(THIS); } } PUBLIC STRING CURRENTLOCATION() { RETURN CURRENTCOORDINATES.TOSTRING() + " " + CURRENTDIRECTION.TOSTRING(); } PUBLIC VOID TURNRIGHT() { THIS.CURRENTDIRECTION = THIS.CURRENTDIRECTION.RIGHT(); } PUBLIC VOID TURNLEFT() { THIS.CURRENTDIRECTION = THIS.CURRENTDIRECTION.LEFT(); } PUBLIC VOID MOVE() { COORDINATES POSITIONAFTERMOVE = CURRENTCOORDINATES.NEWCOORDINATESFORSTEPSIZE(CURRENTDIRECTION.STEPSIZEFORXAXIS(), CURRENTDIRECTION.STEPSIZEFORYAXIS()); //IGNORES THE COMMAND IF ROVER IS BEING DRIVEN OFF PLATEAU IF(PLATEAU.HASWITHINBOUNDS(POSITIONAFTERMOVE)) CURRENTCOORDINATES = CURRENTCOORDINATES.NEWCOORDINATESFOR(CURRENTDIRECTION.STEPSIZEFORXAXIS(), CURRENTDIRECTION.STEPSIZEFORYAXIS()); } }
public class Endpoint {
	/**
	 * endpoint的名字（例如QueryServiceSoap，QueryServiceSoap12），
	 * 从名字也可以判断出对应的endpoint支持的访问协议的类型
	 */
	private String portName = "";
	/**
	 * endpoint的URL
	 */
	private String location = "";
	/**
	 * endpoint在该web服务的WSDL文件中对应的说明信息，是从所对应的port元素的documentation子节点中抽取出的
	 */
	private String documentation = "";

	public String getDocumentation() {
		return documentation;
	}

	public void setDocumentation(String documentation) {
		this.documentation = documentation;
	}

	public String getPortName() {
		return portName;
	}

	public void setPortName(String portName) {
		this.portName = portName;
	}

	public String getLocation() {
		return location;
	}

	public void setLocation(String location) {
		this.location = location;
	}

}
